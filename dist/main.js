!function(t){var e={};function a(s){if(e[s])return e[s].exports;var i=e[s]={i:s,l:!1,exports:{}};return t[s].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=t,a.c=e,a.d=function(t,e,s){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(s,i,function(e){return t[e]}.bind(null,i));return s},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=1)}([function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(t){this.vrc=t}get userId(){return this.vrc.userId}async getReq(t,e={}){let a=Object.assign({apiKey:this.vrc.apiKey,authToken:this.vrc.token},e);return await this.vrc.api.get(t,{params:a})}async deleteReq(t){return await this.vrc.api.delete(t,{params:{apiKey:this.vrc.apiKey,authToken:this.vrc.token}})}async request(t,e,a=null){return await this.vrc.api[t](e,a,{params:{apiKey:this.vrc.apiKey,authToken:this.vrc.token}})}async postReq(t,e=null){return await this.request("post",t,e)}async putReq(t,e=null){return await this.request("put",t,e)}}},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=a(2);e.default=s.default},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=a(3);e.default={async login(t,e,a="release"){let i=new s.default(a);return await i.login(t,e),i}}},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=a(4),i=a(5),r=a(6),n=a(7),u=a(8),d=a(9),o=a(10),c=a(11);e.default=class{constructor(t="release"){let e="https://api.vrchat.cloud/api/1";"dev"===t?e="https://dev-api.vrchat.cloud/api/1/":"beta"===t&&(e="https://beta-api.vrchat.cloud/api/1/"),this.vrc=s.default.create({baseURL:e,headers:{"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest"},responseType:"json"}),this.user=new i.default(this),this.avatar=new r.default(this),this.favorite=new n.default(this),this.world=new u.default(this),this.moderation=new d.default(this),this.notification=new o.default(this)}async login(t,e){this._apiKey=(await this.vrc.get("/config")).data.apiKey;const a=await this.vrc.get("/auth/user",{params:{apiKey:this._apiKey},auth:{username:t,password:e}});this._token=c.parse(a.headers["set-cookie"][1]).auth,this._userId=a.data.id}get api(){return this.vrc}get apiKey(){return this._apiKey}get token(){return this._token}get userId(){return this._userId}}},function(t,e){t.exports=require("axios")},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=a(0);e.default=class extends s.default{async getUserInfo(){return(await this.getReq("/auth/user")).data}async updateUserInfo(t){return(await this.putReq(`/users/${this.userId}`,t)).data}async getFriends(t={}){return(await this.getReq("/auth/user/friends",t)).data}async getFriendStatus(t){return(await this.getReq(`/user/${t}/friendStatus`)).data}async sendFriendRequest(t){return(await this.postReq(`/user/${t}/friendRequest`)).data}async unfriend(t){return(await this.deleteReq(`/auth/user/friends/${t}`)).data}async acceptFriend(t){return(await this.putReq(`/auth/user/notifications/${t}/accept`)).data}async getById(t){return(await this.getReq(`/users/${t}`)).data}async getByName(t){return(await this.getReq(`/users/${t}/name`)).data}get search(){return{all:async(t={})=>(await this.getReq("/users",t)).data,active:async(t={})=>(await this.getReq("/users/active",t)).data}}}},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=a(0);e.default=class extends s.default{async getById(t){return(await this.getReq(`avatars/${t}`)).data}async choose(t){return(await this.putReq(`avatars/${t}/select`)).data}}},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=a(0);e.default=class extends s.default{get add(){return{friend:async t=>(await this.postReq("favorites",{type:"friend",favoriteId:t})).data,world:async t=>(await this.postReq("favorites",{type:"world",favoriteId:t})).data,avatar:async t=>(await this.postReq("favorites",{type:"avatar",favoriteId:t})).data}}async getInfo(t){return(await this.getReq(`favorites/${t}`)).data}async list(t=null){return(await this.getReq("favorites",{type:t})).data}async delete(t){return(await this.deleteReq(`favorites/${t}`)).data}}},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=a(0);e.default=class extends s.default{async getById(t){return(await this.getReq(`worlds/${t}`)).data}get search(){return{all:async(t={})=>(await this.getReq("worlds",t)).data,active:async(t={})=>(await this.getReq("worlds/active",t)).data,recent:async(t={})=>(await this.getReq("worlds/recent",t)).data,favorites:async(t={})=>(await this.getReq("worlds/favorites",t)).data}}async getMetadata(t){return(await this.getReq(`worlds/${t}/metadata`)).data}async getInstanceWithTags(t,e){return(await this.getReq(`worlds/${t}/${e}`)).data}}},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=a(0);e.default=class extends s.default{async send(t){return(await this.postReq(`user/${t}/moderations`)).data}async block(t){return await this.sendPlayer(t,"block")}async unblock(t){return(await this.putReq("auth/user/unblocks",{blocked:t})).data}async sendPlayer(t,e){return(await this.postReq("auth/user/playermoderations",{type:e,moderated:t})).data}async mute(t){return await this.sendPlayer(t,"mute")}async unmute(t){return await this.sendPlayer(t,"unmute")}async delete(t,e){return(await this.deleteReq(`user/${t}/moderations/${e}`)).data}async clear(t){return(await this.deleteReq(`user/${t}/moderations`)).data}async getAgainstSelf(){return(await this.getReq("auth/user/playermoderated")).data}async getSentlist(){return(await this.getReq("auth/user/playermoderations")).data}}},function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const s=a(0);e.default=class extends s.default{async _send(t,e,a={}){return(await this.postReq(`user/${t}/notification`,{type:e,message:a.message,details:a.details})).data}get send(){return{friendRequest:async t=>(await this.postReq(`user/${t}/notification`,{type:"friendrequest"})).data,invite:async(t,e,a="")=>(await this.postReq(`user/${t}/notification`,{type:"invite",message:a,details:JSON.stringify({worldId:e})})).data,halp:async(t,e,a="")=>(await this.postReq(`user/${t}/notification`,{type:"halp",message:a,details:JSON.stringify({})})).data,voteToKick:async t=>(await this.postReq(`user/${t}/notification`,{type:"votetokick",details:JSON.stringify({})})).data,all:async t=>(await this.postReq(`user/${t}/notification`,{type:"all",details:JSON.stringify({})})).data,hidden:async t=>(await this.postReq(`user/${t}/notification`,{type:"hidden",details:JSON.stringify({})})).data,async message(){}}}async markAsRead(t){return(await this.putReq(`auth/user/notifications/${t}/see`)).data}async delete(t){return(await this.putReq(`auth/user/notifications/${t}/hide`)).data}async getAll(){return(await this.getReq("auth/user/notifications")).data}}},function(t,e){t.exports=require("cookie")}]);